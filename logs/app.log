####################################################################################################
 _____ _____ _____ _____ __  __  ____  _   _ 
|  __ \_   _/ ____|_   _|  \/  |/ __ \| \ | |
| |  | || || |  __  | | | \  / | |  | |  \| |
| |  | || || | |_ | | | | |\/| | |  | | . ` |
| |__| || || |__| |_| |_| |  | | |__| | |\  |
|_____/_____\_____|_____|_|  |_|\____/|_| \_|
                                             
                                             

╔════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║ Welcome to DIGIMON: Deep Analysis of Graph-Based RAG Systems.                                          ║
║                                                                                                        ║
║ Unlock advanced insights with our comprehensive tool for evaluating and optimizing RAG models.         ║
║                                                                                                        ║
║ You can freely combine any graph-based RAG algorithms you desire. We hope this will be helpful to you! ║
╚════════════════════════════════════════════════════════════════════════════════════════════════════════╝
####################################################################################################
2025-05-19 15:49:15.428 | WARNING  | Core.GraphRAG:_register_e2r_r2c_matrix:131 - Tree graph is not supported for entity-link-chunk mapping. Skipping entity-link-chunk mapping.
2025-05-19 15:49:15.497 | INFO     | Core.Chunk.DocChunk:build_chunks:27 - Starting chunk the given documents
2025-05-19 15:49:16.742 | INFO     | Core.Storage.ChunkKVStorage:_persist:105 - Writing data into ./cs/tree_graph_balanced/chunk_storage_chunk_data_idx.pkl and ./cs/tree_graph_balanced/chunk_storage_chunk_data_key.pkl
2025-05-19 15:49:16.820 | INFO     | Core.Chunk.DocChunk:build_chunks:74 - ✅ Finished the chunking stage
2025-05-19 15:49:16.841 | INFO     | Core.GraphRAG:_update_costs_info:205 - Chunking stage cost: Total prompt token: 0, Total completeion token: 0, Total cost: 0
2025-05-19 15:49:16.842 | INFO     | Core.GraphRAG:_update_costs_info:207 - Chunking time(s): 1.34
2025-05-19 15:49:16.842 | INFO     | Core.Graph.BaseGraph:build_graph:41 - Starting build graph for the given documents
2025-05-19 15:49:16.842 | INFO     | Core.Storage.TreeGraphStorage:load_tree_graph:33 - Attempting to load the tree from: ./cs/tree_graph_balanced/graph_storage_tree_data.pkl
2025-05-19 15:49:16.893 | INFO     | Core.Storage.TreeGraphStorage:load_tree_graph:38 - Successfully loaded tree from: ./cs/tree_graph_balanced/graph_storage_tree_data.pkl with 1868 nodes and 2 layers
2025-05-19 15:49:16.893 | INFO     | Core.Graph.BaseGraph:build_graph:50 - ✅ Finished the graph building stage
2025-05-19 15:49:16.893 | INFO     | Core.GraphRAG:_update_costs_info:205 - Build Graph stage cost: Total prompt token: 0, Total completeion token: 0, Total cost: 0
2025-05-19 15:49:16.894 | INFO     | Core.GraphRAG:_update_costs_info:207 - Build Graph time(s): 0.05
2025-05-19 15:49:16.899 | INFO     | Core.Index.BaseIndex:build_index:13 - Starting insert elements of the given graph into vector database
2025-05-19 15:49:16.899 | INFO     | Core.Index.BaseIndex:build_index:17 - Loading index from the file ./cs/tree_graph_balanced/entities_vdb
2025-05-19 15:49:17.007 | INFO     | Core.Index.BaseIndex:build_index:29 - ✅ Finished starting insert entities of the given graph into vector database
2025-05-19 15:49:17.007 | INFO     | Core.GraphRAG:_update_costs_info:205 - Index Building stage cost: Total prompt token: 0, Total completeion token: 0, Total cost: 0
2025-05-19 15:49:17.007 | INFO     | Core.GraphRAG:_update_costs_info:207 - Index Building time(s): 0.11
2025-05-19 15:49:17.007 | INFO     | Core.GraphRAG:_build_retriever_context:176 - Building retriever context for the current execution
Processing queries:   0%|          | 0/125 [00:00<?, ?it/s]2025-05-19 15:49:17.940 | WARNING  | tenacity.after:log_it:44 - Finished call to 'Core.Provider.OpenaiApi.OpenAILLM.acompletion_text' after 0.022(s), this was the 1st time calling it.
2025-05-19 15:49:18.010 | WARNING  | tenacity.after:log_it:44 - Finished call to 'Core.Provider.OpenaiApi.OpenAILLM.acompletion_text' after 0.092(s), this was the 2nd time calling it.
2025-05-19 15:49:18.398 | WARNING  | tenacity.after:log_it:44 - Finished call to 'Core.Provider.OpenaiApi.OpenAILLM.acompletion_text' after 0.480(s), this was the 3rd time calling it.
2025-05-19 15:49:18.713 | WARNING  | tenacity.after:log_it:44 - Finished call to 'Core.Provider.OpenaiApi.OpenAILLM.acompletion_text' after 0.795(s), this was the 4th time calling it.
2025-05-19 15:49:23.005 | WARNING  | tenacity.after:log_it:44 - Finished call to 'Core.Provider.OpenaiApi.OpenAILLM.acompletion_text' after 5.088(s), this was the 5th time calling it.
2025-05-19 15:49:26.654 | WARNING  | tenacity.after:log_it:44 - Finished call to 'Core.Provider.OpenaiApi.OpenAILLM.acompletion_text' after 8.736(s), this was the 6th time calling it.
2025-05-19 15:49:26.654 | ERROR    | Core.Common.Utils:log_and_reraise:286 - Retry attempts exhausted. Last exception: 404 page not found
2025-05-19 15:49:26.654 | WARNING  | Core.Common.Utils:log_and_reraise:287 - 
Recommend going to https://deepwisdom.feishu.cn/wiki/MsGnwQBjiif9c3koSJNcYaoSnu4#part-XdatdVlhEojeAfxaaEZcMV3ZniQ
See FAQ 5.8

Processing queries:   0%|          | 0/125 [00:09<?, ?it/s]
Traceback (most recent call last):
  File "/home/msds/qian0097/GraphRAG/main.py", line 82, in <module>
    save_path = wrapper_query(query_dataset, digimon, result_dir)
  File "/home/msds/qian0097/GraphRAG/main.py", line 41, in wrapper_query
    res = asyncio.run(digimon.query(query["question"]))
  File "/home/msds/qian0097/.conda/envs/digimon/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/home/msds/qian0097/.conda/envs/digimon/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/home/msds/qian0097/GraphRAG/Core/GraphRAG.py", line 290, in query
    response = await self._querier.query(query)
  File "/home/msds/qian0097/GraphRAG/Core/Query/BaseQuery.py", line 27, in query
    response = await self.generation_qa(query, context)
  File "/home/msds/qian0097/GraphRAG/Core/Query/BasicQuery.py", line 216, in generation_qa
    response = await self.llm.aask(msg=instruction)
  File "/home/msds/qian0097/GraphRAG/Core/Provider/BaseLLM.py", line 147, in aask
    rsp = await self.acompletion_text(message, stream=stream, timeout=self.get_timeout(timeout), max_tokens = max_tokens, format = format)
  File "/home/msds/qian0097/.conda/envs/digimon/lib/python3.10/site-packages/tenacity/asyncio/__init__.py", line 189, in async_wrapped
    return await copy(fn, *args, **kwargs)
  File "/home/msds/qian0097/.conda/envs/digimon/lib/python3.10/site-packages/tenacity/asyncio/__init__.py", line 111, in __call__
    do = await self.iter(retry_state=retry_state)
  File "/home/msds/qian0097/.conda/envs/digimon/lib/python3.10/site-packages/tenacity/asyncio/__init__.py", line 153, in iter
    result = await action(retry_state)
  File "/home/msds/qian0097/.conda/envs/digimon/lib/python3.10/site-packages/tenacity/_utils.py", line 99, in inner
    return call(*args, **kwargs)
  File "/home/msds/qian0097/GraphRAG/Core/Common/Utils.py", line 293, in log_and_reraise
    raise retry_state.outcome.exception()
  File "/home/msds/qian0097/.conda/envs/digimon/lib/python3.10/site-packages/tenacity/asyncio/__init__.py", line 114, in __call__
    result = await fn(*args, **kwargs)
  File "/home/msds/qian0097/GraphRAG/Core/Provider/OpenaiApi.py", line 157, in acompletion_text
    rsp = await self._achat_completion(messages, timeout=self.get_timeout(timeout), max_tokens = max_tokens)
  File "/home/msds/qian0097/GraphRAG/Core/Provider/OpenaiApi.py", line 138, in _achat_completion
    rsp: ChatCompletion = await self.aclient.chat.completions.create(**kwargs)
  File "/home/msds/qian0097/.conda/envs/digimon/lib/python3.10/site-packages/openai/resources/chat/completions/completions.py", line 2000, in create
    return await self._post(
  File "/home/msds/qian0097/.conda/envs/digimon/lib/python3.10/site-packages/openai/_base_client.py", line 1767, in post
    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)
  File "/home/msds/qian0097/.conda/envs/digimon/lib/python3.10/site-packages/openai/_base_client.py", line 1461, in request
    return await self._request(
  File "/home/msds/qian0097/.conda/envs/digimon/lib/python3.10/site-packages/openai/_base_client.py", line 1562, in _request
    raise self._make_status_error_from_response(err.response) from None
openai.NotFoundError: 404 page not found
